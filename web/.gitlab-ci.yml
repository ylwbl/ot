# image: registry.cn-shanghai.aliyuncs.com/choerodon-tools/cibase:0.9.1
image: registry.elitescloud.com/library/cibase:0.0.2

stages:
  - node-build
  - chart-build
  - sonarqube

variables:
  GIT_SUBMODULE_STRATEGY: recursive

sonarqube-job:
  only:
    - schedules
  stage: sonarqube
  script: 
    - source /etc/profile
    - sonar-scanner -Dsonar.projectKey=yst-web-system -Dsonar.sources=. -Dsonar.host.url=http://sonar-pro.elitescloud.com:9000 -Dsonar.login=e3aad3bc1553277e10945c15764c3f757c11d294
  tags:
    - 2b

sonarqube:
  except:
    - schedules
  when: manual
  stage: sonarqube
  script:
    - source /etc/profile
    - sonar-scanner -Dsonar.projectKey=yst-web-system -Dsonar.sources=. -Dsonar.host.url=http://sonar-pro.elitescloud.com:9000 -Dsonar.login=e3aad3bc1553277e10945c15764c3f757c11d294
node-re-build:
  except:
    - schedules
  when: manual
  stage: node-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}-${CI_PIPELINE_ID}"
    - echo ${CI_COMMIT_TAG}
    - git config --global url."https://".insteadOf git://
    - npm i --registry https://verdaccio.elitescloud.com --sass-binary-site=http://npm.taobao.org/mirrors/node-sass
    - yarn config set registry https://verdaccio.elitescloud.com
    - yarn config set sass_binary_site http://npm.taobao.org/mirrors/node-sass -g
    - npm install
    - CI=false npm run build
    - sed -i 's/this\.webpackChunkzr/window\.webpackChunkzr/g' build/remoteEntry.js
    - pwd
    - mv build docker/
    - ls docker/build
    - docker build --pull -f docker/Dockerfile -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} docker
    - docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
    # 构建镜像
    #- build_multi_platform_image docker docker/Dockerfile
  except:
    - tags
  only:
    refs:
      - dev
      - uat
      - /^dev-.*$/
      - /^uat-.*$/
    variables:
      - $re_build == "true"

node-build:
  except:
    - schedules
  when: manual
  stage: node-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}-${CI_PIPELINE_ID}"
    - echo ${CI_COMMIT_TAG}
    - mv build docker/
    - docker build --pull -f docker/Dockerfile -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} docker
    - docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
    # 构建镜像
    #- build_multi_platform_image docker docker/Dockerfile
  except:
    - tags
  only:
    refs:
      - dev
      - uat
      - /^dev-.*$/
      - /^uat-.*$/
    variables:
      - $re_build == "false"
      - $re_build == null
      - $re_build == 'null'

chart-build:
  except:
    - schedules
  when: manual
  stage: chart-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}-${CI_PIPELINE_ID}"
    - echo ${CI_COMMIT_TAG}
    - chart_build
  except:
    - tags

node-re-build-tag:
  except:
    - schedules
  when: manual
  stage: node-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}"
    - echo ${CI_COMMIT_TAG}
    - npm i --registry https://verdaccio.elitescloud.com --sass-binary-site=http://npm.taobao.org/mirrors/node-sass
    - yarn config set registry https://verdaccio.elitescloud.com
    - yarn config set sass_binary_site http://npm.taobao.org/mirrors/node-sass -g
    - npm install
    - CI=false npm run build
    - sed -i 's/this\.webpackChunkzr/window\.webpackChunkzr/g' build/remoteEntry.js
    - pwd
    - mv build docker/
    - docker build --pull -f docker/Dockerfile -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} docker
    - docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
    # 构建镜像
    #- build_multi_platform_image docker docker/Dockerfile
  only:
    refs:
      - tags
    variables:
      - $re_build == "true"
node-build-tag:
  except:
    - schedules
  when: manual
  stage: node-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}"
    - echo ${CI_COMMIT_TAG}
    - mv build docker/
    - docker build --pull -f docker/Dockerfile -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} docker
    - docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
    # 构建镜像
    #- build_multi_platform_image docker docker/Dockerfile
  only:
    refs:
      - tags
    variables:
      - $re_build == "false"
      - $re_build == null
      - $re_build == 'null'
     

chart-build-tag:
  except:
    - schedules
  when: manual
  stage: chart-build
  script:
    - export CI_COMMIT_TAG="${CI_COMMIT_TAG}"
    - echo ${CI_COMMIT_TAG}
    - chart_build
  only:
    - tags

.auto_devops: &auto_devops |
  http_status_code=`curl -o .auto_devops.sh -s -m 10 --connect-timeout 10 -w %{http_code} "${CHOERODON_URL}/devops/ci?token=${Token}&type=front"`
  if [ "$http_status_code" != "200" ]; then
    cat .auto_devops.sh
    exit 1
  fi
  source .auto_devops.sh

before_script:
  - *auto_devops
